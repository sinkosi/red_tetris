{"ast":null,"code":"var _jsxFileName = \"/home/mosima/Desktop/red_tetris/frontend/src/components/GameCanvas.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [msg, setMsg] = useState(\"message\");\n  useEffect(() => {\n    if (canvasRef.current) {\n      const renderCtx = canvasRef.current.getContext(\"2d\");\n\n      if (renderCtx) {\n        setContext(renderCtx);\n      }\n    }\n  }, [context]);\n  useEffect(() => {\n    if (context) {\n      console.log(\"useEffect with context ran\");\n      /**\n       * this should be where the drawing magic happens\n       */\n    }\n\n    return () => {\n      console.log(\"this is where the cleanup stuff happens\");\n    };\n  }, [context]);\n  useEffect(() => {\n    console.log(\"msg useEffect ran\");\n    return () => {\n      console.log(\"msg cleanup happenning\");\n    };\n  }, [msg]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => setMsg(\"new message\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"hi\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"canvas\",\n    ref: canvasRef,\n    width: 500,\n    height: 500,\n    style: {\n      border: \"2px solid #000\",\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default GameCanvas;","map":{"version":3,"sources":["/home/mosima/Desktop/red_tetris/frontend/src/components/GameCanvas.jsx"],"names":["React","useEffect","useState","useRef","GameCanvas","canvasRef","context","setContext","msg","setMsg","current","renderCtx","getContext","console","log","textAlign","e","border","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,SAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAII,SAAS,CAACK,OAAd,EAAuB;AACtB,YAAMC,SAAS,GAAGN,SAAS,CAACK,OAAV,CAAkBE,UAAlB,CAA6B,IAA7B,CAAlB;;AAEA,UAAID,SAAJ,EAAe;AACdJ,QAAAA,UAAU,CAACI,SAAD,CAAV;AACA;AACD;AACD,GARQ,EAQN,CAACL,OAAD,CARM,CAAT;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIK,OAAJ,EAAa;AACZO,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEA;;;AAGA;;AACD,WAAO,MAAM;AACZD,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACA,KAFD;AAGA,GAXQ,EAWN,CAACR,OAAD,CAXM,CAAT;AAaAL,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAO,MAAM;AACZD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,KAFD;AAGA,GALQ,EAKN,CAACN,GAAD,CALM,CAAT;AAMA,sBACC;AACC,IAAA,KAAK,EAAE;AACNO,MAAAA,SAAS,EAAE;AADL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC;AAAQ,IAAA,OAAO,EAAGC,CAAD,IAAOP,MAAM,CAAC,aAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALD,oBAK4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL5D,eAMC;AACC,IAAA,EAAE,EAAC,QADJ;AAEC,IAAA,GAAG,EAAEJ,SAFN;AAGC,IAAA,KAAK,EAAE,GAHR;AAIC,IAAA,MAAM,EAAE,GAJT;AAKC,IAAA,KAAK,EAAE;AACNY,MAAAA,MAAM,EAAE,gBADF;AAENC,MAAAA,SAAS,EAAE;AAFL,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAmBA,CArDD;;AAuDA,eAAed,UAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst GameCanvas = () => {\n\tconst canvasRef = useRef(null);\n\tconst [context, setContext] = useState(null);\n\tconst [msg, setMsg] = useState(\"message\");\n\n\tuseEffect(() => {\n\t\tif (canvasRef.current) {\n\t\t\tconst renderCtx = canvasRef.current.getContext(\"2d\");\n\n\t\t\tif (renderCtx) {\n\t\t\t\tsetContext(renderCtx);\n\t\t\t}\n\t\t}\n\t}, [context]);\n\n\tuseEffect(() => {\n\t\tif (context) {\n\t\t\tconsole.log(\"useEffect with context ran\");\n\n\t\t\t/**\n\t\t\t * this should be where the drawing magic happens\n\t\t\t */\n\t\t}\n\t\treturn () => {\n\t\t\tconsole.log(\"this is where the cleanup stuff happens\");\n\t\t};\n\t}, [context]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"msg useEffect ran\");\n\t\treturn () => {\n\t\t\tconsole.log(\"msg cleanup happenning\");\n\t\t};\n\t}, [msg]);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}\n\t\t>\n\t\t\t<button onClick={(e) => setMsg(\"new message\")}>hi</button> <br />\n\t\t\t<canvas\n\t\t\t\tid=\"canvas\"\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={500}\n\t\t\t\theight={500}\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: \"2px solid #000\",\n\t\t\t\t\tmarginTop: 10,\n\t\t\t\t}}\n\t\t\t></canvas>\n\t\t</div>\n\t);\n};\n\nexport default GameCanvas;\n"]},"metadata":{},"sourceType":"module"}