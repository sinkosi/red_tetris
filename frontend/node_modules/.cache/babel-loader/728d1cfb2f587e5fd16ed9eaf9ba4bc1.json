{"ast":null,"code":"import _slicedToArray from\"/home/mosima/Desktop/red_tetris/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import{pieces,pieceStartPosition}from\"../misc/pieces\";/**********************************\\\n * canvas config data\n\\**********************************/var ROWS=20;var COLS=10;var EMPTY_BG=\"#765\";var BORDER=\"adf\";var BLOCK=30;/****\n * Canvas drawing functions\n */var drawBlock=function drawBlock(context,x,y){var colour=arguments.length>3&&arguments[3]!==undefined?arguments[3]:EMPTY_BG;var strokeColour=arguments.length>4&&arguments[4]!==undefined?arguments[4]:BORDER;context.fillStyle=colour;context.fillRect(x*BLOCK,y*BLOCK,BLOCK,BLOCK);context.strokeStyle=strokeColour;context.strokeRect(x*BLOCK,y*BLOCK,BLOCK,BLOCK);};/***\n * Tetramino Class\n */function Piece(context,grid,piece,colour){var _this=this;this.piece=piece;this.colour=colour;this.active=0;this.x=0;this.y=0;this.context=context;this.grid=grid;this.draw=function(){var active=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.active;_this.active=active;for(var row=0;row<_this.piece[_this.active].length;row++){for(var col=0;col<_this.piece[_this.active][row].length;col++){if(_this.piece[_this.active][row][col])drawBlock(_this.context,_this.x+col,_this.y+row,_this.colour);}}};this.clear=function(){var active=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.active;_this.active=active;for(var row=0;row<_this.piece[_this.active].length;row++){for(var col=0;col<_this.piece[_this.active][row].length;col++){if(_this.piece[_this.active][row][col])drawBlock(_this.context,_this.x+col,_this.y+row,EMPTY_BG);}}};this.lock=function(){for(var row=0;row<_this.piece[_this.active].length;row++){for(var col=0;col<_this.piece[_this.active][row].length;col++){if(_this.piece[_this.active][row][col])grid.coords[_this.y+row][_this.x+col]=_this.colour;}}};this.rotate=function(){if(!_this.isCollition(_this.x,_this.y,(_this.active+1)%4)){_this.clear();_this.active=(1+_this.active)%_this.piece.length;_this.draw();}else if(!_this.isCollition(_this.x+1,_this.y,(_this.active+1)%4)){_this.clear();_this.x=_this.x+1;_this.active=(1+_this.active)%_this.piece.length;_this.draw();}else if(!_this.isCollition(_this.x-1,_this.y,(_this.active+1)%4)){_this.clear();_this.x=_this.x-1;_this.active=(1+_this.active)%_this.piece.length;_this.draw();}else if(!_this.isCollition(_this.x-2,_this.y,(_this.active+1)%4)){_this.clear();_this.x=_this.x-2;_this.active=(1+_this.active)%_this.piece.length;_this.draw();}};this.moveLeft=function(){if(!_this.isCollition(_this.x-1)){_this.clear();_this.x=_this.x-1;_this.draw();}};this.moveRight=function(){if(!_this.isCollition(_this.x+1)){_this.clear();_this.x=_this.x+1;_this.draw();}};this.moveDown=function(){if(!_this.isCollition(_this.x,_this.y+1)){_this.clear();_this.y=_this.y+1;_this.draw();return true;}return false;};this.isCollition=function(){var newX=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.x;var newY=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_this.y;var newState=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_this.active;for(var row=0;row<_this.piece[newState].length;row++){for(var col=0;col<_this.piece[newState][row].length;col++){if(_this.piece[newState][row][col]){if(newX+col<0||newX+col>=COLS||newY+row>=ROWS){console.log(\"collision\");return true;}if(_this.grid.coords[newY+row][newX+col]!==EMPTY_BG){return true;}}}}return false;};}/**\n * Grid class\n */function Grid(context){var _this2=this;var colums=arguments.length>1&&arguments[1]!==undefined?arguments[1]:COLS;var rows=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ROWS;var backgroundColour=arguments.length>3&&arguments[3]!==undefined?arguments[3]:EMPTY_BG;this.colums=colums;this.rows=rows;this.colour=backgroundColour;this.coords=[];this.init=function(){for(var row=0;row<_this2.rows;row++){_this2.coords[row]=[];for(var col=0;col<_this2.colums;col++){_this2.coords[row][col]=EMPTY_BG;}}_this2.draw();};this.draw=function(){var r=0;var c=0;while(_this2.coords[r]){c=0;while(_this2.coords[r][c]){drawBlock(context,c,r,_this2.coords[r][c]);c++;}r++;}};this.penalty=function(currentPiece){var y=0;while(_this2.coords[y+1]){_this2.coords[y]=_this2.coords[y+1];y++;}_this2.coords[y]=[];for(var c=0;c<COLS;c++){_this2.coords[y][c]=\"red\";}_this2.draw();if(currentPiece.y-1>=0)currentPiece.y-=1;currentPiece.draw();};this.removeFull=function(){};}// function penalty(grid, piece) {\n// \tlet y = 0\n// \twhile (grid.coords[y + 1]) {\n// \t\tgrid.coords[y] = grid.coords[y + 1]\n// \t\ty++\n// \t}\n// \tgrid.coords[y] = []\n// \tfor (let c = 0; c < COLS; c++) {\n// \t\tgrid.coords[y][c] = \"red\"\n// \t}\n// \tgrid.draw()\n// \tpiece.y -= 1\n// \tpiece.draw()\n// }\nfunction controls(key,piece,grid,context){if(key===\"ArrowUp\")piece.rotate();if(key===\"ArrowLeft\")piece.moveLeft();if(key===\"ArrowRight\")piece.moveRight();if(key===\"ArrowDown\")piece.moveDown();if(key===\"l\")piece.lock();if(key===\"p\")grid.penalty(piece);if(key===\"n\")newPiece(context,grid);}function newPiece(context,grid){if(!context||!grid)return null;var pieceNum=Math.floor(Math.random()*pieces.length);var pieceVariant=Math.floor(Math.random()*pieces[pieceNum][0].length);console.log(pieceNum,pieceVariant);var newPiece=new Piece(context,grid,pieces[pieceNum][0],pieces[pieceNum][1]);newPiece.active=pieceVariant;var _pieceStartPosition=pieceStartPosition(pieceNum,pieceVariant),_pieceStartPosition2=_slicedToArray(_pieceStartPosition,2),y=_pieceStartPosition2[0],x=_pieceStartPosition2[1];newPiece.x=x;newPiece.y=y;newPiece.draw();return newPiece;}var GameCanvas=function GameCanvas(){var canvasRef=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),context=_useState2[0],setContext=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),grid=_useState4[0],setGrid=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),currentPiece=_useState6[0],setCurrentPiece=_useState6[1];useEffect(function(){if(canvasRef.current){var renderCtx=canvasRef.current.getContext(\"2d\");if(renderCtx){setContext(renderCtx);}}},[context]);useEffect(function(){if(context){if(!grid){var gr=new Grid(context);gr.init();setGrid(gr);}else{console.log(\"grid already exist\");if(!currentPiece){var piece=newPiece(context,grid);piece.draw();setCurrentPiece(piece);}else{console.log(\"current piece already set: \",currentPiece);}/**\n\t\t\t\t * this should be where the drawing magic happens\n\t\t\t\t */}}return function(){console.log(\"this is where the cleanup stuff happens\");};},[context,grid,currentPiece]);useEffect(function(){var handleKeyPress=function handleKeyPress(_ref){var key=_ref.key;return controls(key,currentPiece,grid,context);};if(currentPiece){document.addEventListener(\"keydown\",handleKeyPress);}return function(){document.removeEventListener(\"keydown\",handleKeyPress);};},[currentPiece,grid,context]);var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),seconds=_useState8[0],setSeconds=_useState8[1];useEffect(function(){var interval=setInterval(function(){setSeconds(function(seconds){return seconds+1;});if(currentPiece)if(!currentPiece.moveDown()){currentPiece.lock();setCurrentPiece(newPiece(context,grid));setSeconds(0);console.log(\"lock current piece and request for the next piece\");}},1000);return function(){return clearInterval(interval);};},[currentPiece]);return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h3\",null,seconds,\" seconds since mount\"),/*#__PURE__*/React.createElement(\"canvas\",{id:\"canvas\",ref:canvasRef,width:COLS*BLOCK,height:ROWS*BLOCK,style:{border:\"2px solid #000\",marginTop:10}}));};export default GameCanvas;","map":{"version":3,"sources":["/home/mosima/Desktop/red_tetris/frontend/src/components/GameCanvas.jsx"],"names":["React","useEffect","useState","useRef","pieces","pieceStartPosition","ROWS","COLS","EMPTY_BG","BORDER","BLOCK","drawBlock","context","x","y","colour","strokeColour","fillStyle","fillRect","strokeStyle","strokeRect","Piece","grid","piece","active","draw","row","length","col","clear","lock","coords","rotate","isCollition","moveLeft","moveRight","moveDown","newX","newY","newState","console","log","Grid","colums","rows","backgroundColour","init","r","c","penalty","currentPiece","removeFull","controls","key","newPiece","pieceNum","Math","floor","random","pieceVariant","GameCanvas","canvasRef","setContext","setGrid","setCurrentPiece","current","renderCtx","getContext","gr","handleKeyPress","document","addEventListener","removeEventListener","seconds","setSeconds","interval","setInterval","clearInterval","textAlign","border","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\nimport { pieces, pieceStartPosition } from \"../misc/pieces\"\n\n/**********************************\\\n * canvas config data\n\\**********************************/\nconst ROWS = 20\nconst COLS = 10\nconst EMPTY_BG = \"#765\"\nconst BORDER = \"adf\"\nconst BLOCK = 30\n\n/****\n * Canvas drawing functions\n */\nconst drawBlock = (context, x, y, colour = EMPTY_BG, strokeColour = BORDER) => {\n\tcontext.fillStyle = colour\n\tcontext.fillRect(x * BLOCK, y * BLOCK, BLOCK, BLOCK)\n\tcontext.strokeStyle = strokeColour\n\tcontext.strokeRect(x * BLOCK, y * BLOCK, BLOCK, BLOCK)\n}\n\n/***\n * Tetramino Class\n */\n\nfunction Piece(context, grid, piece, colour) {\n\tthis.piece = piece\n\tthis.colour = colour\n\tthis.active = 0\n\tthis.x = 0\n\tthis.y = 0\n\tthis.context = context\n\tthis.grid = grid\n\n\tthis.draw = (active = this.active) => {\n\t\tthis.active = active\n\n\t\tfor (let row = 0; row < this.piece[this.active].length; row++) {\n\t\t\tfor (let col = 0; col < this.piece[this.active][row].length; col++) {\n\t\t\t\tif (this.piece[this.active][row][col]) drawBlock(this.context, this.x + col, this.y + row, this.colour)\n\t\t\t}\n\t\t}\n\t}\n\tthis.clear = (active = this.active) => {\n\t\tthis.active = active\n\n\t\tfor (let row = 0; row < this.piece[this.active].length; row++) {\n\t\t\tfor (let col = 0; col < this.piece[this.active][row].length; col++) {\n\t\t\t\tif (this.piece[this.active][row][col]) drawBlock(this.context, this.x + col, this.y + row, EMPTY_BG)\n\t\t\t}\n\t\t}\n\t}\n\tthis.lock = () => {\n\t\tfor (let row = 0; row < this.piece[this.active].length; row++) {\n\t\t\tfor (let col = 0; col < this.piece[this.active][row].length; col++) {\n\t\t\t\tif (this.piece[this.active][row][col]) grid.coords[this.y + row][this.x + col] = this.colour\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.rotate = () => {\n\t\tif (!this.isCollition(this.x, this.y, (this.active + 1) % 4)) {\n\t\t\tthis.clear()\n\t\t\tthis.active = (1 + this.active) % this.piece.length\n\t\t\tthis.draw()\n\t\t} else if (!this.isCollition(this.x + 1, this.y, (this.active + 1) % 4)) {\n\t\t\tthis.clear()\n\t\t\tthis.x = this.x + 1\n\t\t\tthis.active = (1 + this.active) % this.piece.length\n\t\t\tthis.draw()\n\t\t} else if (!this.isCollition(this.x - 1, this.y, (this.active + 1) % 4)) {\n\t\t\tthis.clear()\n\t\t\tthis.x = this.x - 1\n\n\t\t\tthis.active = (1 + this.active) % this.piece.length\n\t\t\tthis.draw()\n\t\t} else if (!this.isCollition(this.x - 2, this.y, (this.active + 1) % 4)) {\n\t\t\tthis.clear()\n\t\t\tthis.x = this.x - 2\n\n\t\t\tthis.active = (1 + this.active) % this.piece.length\n\t\t\tthis.draw()\n\t\t}\n\t}\n\n\tthis.moveLeft = () => {\n\t\tif (!this.isCollition(this.x - 1)) {\n\t\t\tthis.clear()\n\t\t\tthis.x = this.x - 1\n\t\t\tthis.draw()\n\t\t}\n\t}\n\n\tthis.moveRight = () => {\n\t\tif (!this.isCollition(this.x + 1)) {\n\t\t\tthis.clear()\n\t\t\tthis.x = this.x + 1\n\t\t\tthis.draw()\n\t\t}\n\t}\n\n\tthis.moveDown = () => {\n\t\tif (!this.isCollition(this.x, this.y + 1)) {\n\t\t\tthis.clear()\n\t\t\tthis.y = this.y + 1\n\t\t\tthis.draw()\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tthis.isCollition = (newX = this.x, newY = this.y, newState = this.active) => {\n\t\tfor (let row = 0; row < this.piece[newState].length; row++) {\n\t\t\tfor (let col = 0; col < this.piece[newState][row].length; col++) {\n\t\t\t\tif (this.piece[newState][row][col]) {\n\t\t\t\t\tif (newX + col < 0 || newX + col >= COLS || newY + row >= ROWS) {\n\t\t\t\t\t\tconsole.log(\"collision\")\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t\tif (this.grid.coords[newY + row][newX + col] !== EMPTY_BG) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n}\n\n/**\n * Grid class\n */\n\nfunction Grid(context, colums = COLS, rows = ROWS, backgroundColour = EMPTY_BG) {\n\tthis.colums = colums\n\tthis.rows = rows\n\tthis.colour = backgroundColour\n\tthis.coords = []\n\n\tthis.init = () => {\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tthis.coords[row] = []\n\t\t\tfor (let col = 0; col < this.colums; col++) {\n\t\t\t\tthis.coords[row][col] = EMPTY_BG\n\t\t\t}\n\t\t}\n\t\tthis.draw()\n\t}\n\n\tthis.draw = () => {\n\t\tlet r = 0\n\t\tlet c = 0\n\t\twhile (this.coords[r]) {\n\t\t\tc = 0\n\t\t\twhile (this.coords[r][c]) {\n\t\t\t\tdrawBlock(context, c, r, this.coords[r][c])\n\t\t\t\tc++\n\t\t\t}\n\t\t\tr++\n\t\t}\n\t}\n\n\tthis.penalty = (currentPiece) => {\n\t\tlet y = 0\n\t\twhile (this.coords[y + 1]) {\n\t\t\tthis.coords[y] = this.coords[y + 1]\n\t\t\ty++\n\t\t}\n\t\tthis.coords[y] = []\n\t\tfor (let c = 0; c < COLS; c++) {\n\t\t\tthis.coords[y][c] = \"red\"\n\t\t}\n\t\tthis.draw()\n\n\t\tif (currentPiece.y - 1 >= 0) currentPiece.y -= 1\n\t\tcurrentPiece.draw()\n\t}\n\n\tthis.removeFull = () => {}\n}\n\n// function penalty(grid, piece) {\n// \tlet y = 0\n// \twhile (grid.coords[y + 1]) {\n// \t\tgrid.coords[y] = grid.coords[y + 1]\n// \t\ty++\n// \t}\n// \tgrid.coords[y] = []\n// \tfor (let c = 0; c < COLS; c++) {\n// \t\tgrid.coords[y][c] = \"red\"\n// \t}\n// \tgrid.draw()\n// \tpiece.y -= 1\n// \tpiece.draw()\n// }\n\nfunction controls(key, piece, grid, context) {\n\tif (key === \"ArrowUp\") piece.rotate()\n\tif (key === \"ArrowLeft\") piece.moveLeft()\n\tif (key === \"ArrowRight\") piece.moveRight()\n\tif (key === \"ArrowDown\") piece.moveDown()\n\tif (key === \"l\") piece.lock()\n\tif (key === \"p\") grid.penalty(piece)\n\tif (key === \"n\") newPiece(context, grid)\n}\n\nfunction newPiece(context, grid) {\n\tif (!context || !grid) return null\n\n\tlet pieceNum = Math.floor(Math.random() * pieces.length)\n\tlet pieceVariant = Math.floor(Math.random() * pieces[pieceNum][0].length)\n\tconsole.log(pieceNum, pieceVariant)\n\tlet newPiece = new Piece(context, grid, pieces[pieceNum][0], pieces[pieceNum][1])\n\n\tnewPiece.active = pieceVariant\n\tlet [y, x] = pieceStartPosition(pieceNum, pieceVariant)\n\tnewPiece.x = x\n\tnewPiece.y = y\n\tnewPiece.draw()\n\treturn newPiece\n}\n\nconst GameCanvas = () => {\n\tconst canvasRef = useRef(null)\n\tconst [context, setContext] = useState(null)\n\tconst [grid, setGrid] = useState(null)\n\tconst [currentPiece, setCurrentPiece] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (canvasRef.current) {\n\t\t\tconst renderCtx = canvasRef.current.getContext(\"2d\")\n\n\t\t\tif (renderCtx) {\n\t\t\t\tsetContext(renderCtx)\n\t\t\t}\n\t\t}\n\t}, [context])\n\n\tuseEffect(() => {\n\t\tif (context) {\n\t\t\tif (!grid) {\n\t\t\t\tlet gr = new Grid(context)\n\t\t\t\tgr.init()\n\t\t\t\tsetGrid(gr)\n\t\t\t} else {\n\t\t\t\tconsole.log(\"grid already exist\")\n\n\t\t\t\tif (!currentPiece) {\n\t\t\t\t\tlet piece = newPiece(context, grid)\n\t\t\t\t\tpiece.draw()\n\t\t\t\t\tsetCurrentPiece(piece)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"current piece already set: \", currentPiece)\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * this should be where the drawing magic happens\n\t\t\t\t */\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tconsole.log(\"this is where the cleanup stuff happens\")\n\t\t}\n\t}, [context, grid, currentPiece])\n\n\tuseEffect(() => {\n\t\tconst handleKeyPress = ({ key }) => controls(key, currentPiece, grid, context)\n\t\tif (currentPiece) {\n\t\t\tdocument.addEventListener(\"keydown\", handleKeyPress)\n\t\t}\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", handleKeyPress)\n\t\t}\n\t}, [currentPiece, grid, context])\n\n\tconst [seconds, setSeconds] = useState(0)\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetSeconds((seconds) => seconds + 1)\n\t\t\tif (currentPiece)\n\t\t\t\tif (!currentPiece.moveDown()) {\n\t\t\t\t\tcurrentPiece.lock()\n\t\t\t\t\tsetCurrentPiece(newPiece(context, grid))\n\t\t\t\t\tsetSeconds(0)\n\t\t\t\t\tconsole.log(\"lock current piece and request for the next piece\")\n\t\t\t\t}\n\t\t}, 1000)\n\t\treturn () => clearInterval(interval)\n\t}, [currentPiece])\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}>\n\t\t\t<h3>{seconds} seconds since mount</h3>\n\t\t\t<canvas\n\t\t\t\tid=\"canvas\"\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={COLS * BLOCK}\n\t\t\t\theight={ROWS * BLOCK}\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: \"2px solid #000\",\n\t\t\t\t\tmarginTop: 10,\n\t\t\t\t}}></canvas>\n\t\t</div>\n\t)\n}\n\nexport default GameCanvas\n"]},"metadata":{},"sourceType":"module"}