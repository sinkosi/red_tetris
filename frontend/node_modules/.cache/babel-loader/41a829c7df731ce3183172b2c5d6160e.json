{"ast":null,"code":"var _jsxFileName = \"/home/mosima/Desktop/red_tetris/frontend/src/components/Game.jsx\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport controls from \"../misc/controls\";\nimport { newPiece } from \"../misc/Piece\";\nimport GameCanvas from \"./GameCanvas\";\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nconst Game = props => {\n  const [gameOver, setGameOver] = useState(true);\n  const [grid, setGrid] = useState(null);\n  const [currentPiece, setCurrentPiece] = useState(null);\n  const [nextPiece, setNextPiece] = useState(null);\n  const [context, setContext] = useState(null);\n  useEffect(() => {\n    // setCurrentPiece(newPiece())\n    setNextPiece(newPiece());\n  }, []);\n\n  const getNextPiece = () => {\n    console.log(\"getNextPiece was called\");\n    let next = nextPiece;\n    next.context = context;\n    next.grid = grid; // console.log({ next })\n    // grid.draw()\n\n    next.draw();\n    setCurrentPiece(next);\n\n    if (next.isCollision()) {\n      setGameOver(true);\n      setGrid(null);\n      setContext(null);\n    }\n\n    setNextPiece(newPiece());\n    return next;\n  };\n\n  useEffect(() => {\n    const handleKeyPress = ({\n      key\n    }) => controls(key, currentPiece, grid, context);\n\n    if (currentPiece) {\n      document.addEventListener(\"keydown\", handleKeyPress);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [currentPiece, grid, context]);\n\n  const handleStart = () => setGameOver(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, gameOver ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"start\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GameCanvas, {\n    setGameOver: setGameOver,\n    grid: grid,\n    setGrid: setGrid,\n    currentPiece: currentPiece,\n    setCurrentPiece: setCurrentPiece,\n    context: context,\n    setContext: setContext,\n    getNextPiece: getNextPiece,\n    gameOver: gameOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RotateRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  })))));\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/mosima/Desktop/red_tetris/frontend/src/components/Game.jsx"],"names":["Button","Paper","React","useEffect","useState","controls","newPiece","GameCanvas","RotateRightIcon","ArrowBackIcon","ArrowForwardIcon","ArrowDownwardIcon","Game","props","gameOver","setGameOver","grid","setGrid","currentPiece","setCurrentPiece","nextPiece","setNextPiece","context","setContext","getNextPiece","console","log","next","draw","isCollision","handleKeyPress","key","document","addEventListener","removeEventListener","handleStart"],"mappings":"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","sourcesContent":["import { Button, Paper } from \"@material-ui/core\"\nimport React, { useEffect, useState } from \"react\"\nimport controls from \"../misc/controls\"\nimport { newPiece } from \"../misc/Piece\"\nimport GameCanvas from \"./GameCanvas\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\"\n\nconst Game = (props) => {\n\tconst [gameOver, setGameOver] = useState(true)\n\tconst [grid, setGrid] = useState(null)\n\tconst [currentPiece, setCurrentPiece] = useState(null)\n\tconst [nextPiece, setNextPiece] = useState(null)\n\tconst [context, setContext] = useState(null)\n\n\tuseEffect(() => {\n\t\t// setCurrentPiece(newPiece())\n\t\tsetNextPiece(newPiece())\n\t}, [])\n\n\tconst getNextPiece = () => {\n\t\tconsole.log(\"getNextPiece was called\")\n\t\tlet next = nextPiece\n\t\tnext.context = context\n\t\tnext.grid = grid\n\t\t// console.log({ next })\n\t\t// grid.draw()\n\t\tnext.draw()\n\t\tsetCurrentPiece(next)\n\t\tif (next.isCollision()) {\n\t\t\tsetGameOver(true)\n\t\t\tsetGrid(null)\n\t\t\tsetContext(null)\n\t\t}\n\t\tsetNextPiece(newPiece())\n\t\treturn next\n\t}\n\n\tuseEffect(() => {\n\t\tconst handleKeyPress = ({ key }) => controls(key, currentPiece, grid, context)\n\t\tif (currentPiece) {\n\t\t\tdocument.addEventListener(\"keydown\", handleKeyPress)\n\t\t}\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", handleKeyPress)\n\t\t}\n\t}, [currentPiece, grid, context])\n\n\tconst handleStart = () => setGameOver(false)\n\n\treturn (\n\t\t<>\n\t\t\t{gameOver ? (\n\t\t\t\t<Button color=\"primary\" onClick={handleStart}>\n\t\t\t\t\tstart\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<GameCanvas\n\t\t\t\t\t\tsetGameOver={setGameOver}\n\t\t\t\t\t\tgrid={grid}\n\t\t\t\t\t\tsetGrid={setGrid}\n\t\t\t\t\t\tcurrentPiece={currentPiece}\n\t\t\t\t\t\tsetCurrentPiece={setCurrentPiece}\n\t\t\t\t\t\tcontext={context}\n\t\t\t\t\t\tsetContext={setContext}\n\t\t\t\t\t\tgetNextPiece={getNextPiece}\n\t\t\t\t\t\tgameOver={gameOver}\n\t\t\t\t\t/>\n\t\t\t\t\t<Paper elevation={1}>\n\t\t\t\t\t\t<Button variant=\"contained\">\n\t\t\t\t\t\t\t<ArrowBackIcon />{\" \"}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"contained\">\n\t\t\t\t\t\t\t<ArrowDownwardIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"contained\">\n\t\t\t\t\t\t\t<RotateRightIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"contained\">\n\t\t\t\t\t\t\t<ArrowForwardIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}